import * as _30 from "../confio/proofs";
export declare const ics23: {
    hashOpFromJSON(object: any): _30.HashOp;
    hashOpToJSON(object: _30.HashOp): string;
    lengthOpFromJSON(object: any): _30.LengthOp;
    lengthOpToJSON(object: _30.LengthOp): string;
    HashOp: typeof _30.HashOp;
    HashOpSDKType: typeof _30.HashOp;
    HashOpAmino: typeof _30.HashOp;
    LengthOp: typeof _30.LengthOp;
    LengthOpSDKType: typeof _30.LengthOp;
    LengthOpAmino: typeof _30.LengthOp;
    ExistenceProof: {
        typeUrl: string;
        encode(message: _30.ExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.ExistenceProof;
        fromPartial(object: Partial<_30.ExistenceProof>): _30.ExistenceProof;
        fromAmino(object: _30.ExistenceProofAmino): _30.ExistenceProof;
        toAmino(message: _30.ExistenceProof): _30.ExistenceProofAmino;
        fromAminoMsg(object: _30.ExistenceProofAminoMsg): _30.ExistenceProof;
        fromProtoMsg(message: _30.ExistenceProofProtoMsg): _30.ExistenceProof;
        toProto(message: _30.ExistenceProof): Uint8Array;
        toProtoMsg(message: _30.ExistenceProof): _30.ExistenceProofProtoMsg;
    };
    NonExistenceProof: {
        typeUrl: string;
        encode(message: _30.NonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.NonExistenceProof;
        fromPartial(object: Partial<_30.NonExistenceProof>): _30.NonExistenceProof;
        fromAmino(object: _30.NonExistenceProofAmino): _30.NonExistenceProof;
        toAmino(message: _30.NonExistenceProof): _30.NonExistenceProofAmino;
        fromAminoMsg(object: _30.NonExistenceProofAminoMsg): _30.NonExistenceProof;
        fromProtoMsg(message: _30.NonExistenceProofProtoMsg): _30.NonExistenceProof;
        toProto(message: _30.NonExistenceProof): Uint8Array;
        toProtoMsg(message: _30.NonExistenceProof): _30.NonExistenceProofProtoMsg;
    };
    CommitmentProof: {
        typeUrl: string;
        encode(message: _30.CommitmentProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.CommitmentProof;
        fromPartial(object: Partial<_30.CommitmentProof>): _30.CommitmentProof;
        fromAmino(object: _30.CommitmentProofAmino): _30.CommitmentProof;
        toAmino(message: _30.CommitmentProof): _30.CommitmentProofAmino;
        fromAminoMsg(object: _30.CommitmentProofAminoMsg): _30.CommitmentProof;
        fromProtoMsg(message: _30.CommitmentProofProtoMsg): _30.CommitmentProof;
        toProto(message: _30.CommitmentProof): Uint8Array;
        toProtoMsg(message: _30.CommitmentProof): _30.CommitmentProofProtoMsg;
    };
    LeafOp: {
        typeUrl: string;
        encode(message: _30.LeafOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.LeafOp;
        fromPartial(object: Partial<_30.LeafOp>): _30.LeafOp;
        fromAmino(object: _30.LeafOpAmino): _30.LeafOp;
        toAmino(message: _30.LeafOp): _30.LeafOpAmino;
        fromAminoMsg(object: _30.LeafOpAminoMsg): _30.LeafOp;
        fromProtoMsg(message: _30.LeafOpProtoMsg): _30.LeafOp;
        toProto(message: _30.LeafOp): Uint8Array;
        toProtoMsg(message: _30.LeafOp): _30.LeafOpProtoMsg;
    };
    InnerOp: {
        typeUrl: string;
        encode(message: _30.InnerOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.InnerOp;
        fromPartial(object: Partial<_30.InnerOp>): _30.InnerOp;
        fromAmino(object: _30.InnerOpAmino): _30.InnerOp;
        toAmino(message: _30.InnerOp): _30.InnerOpAmino;
        fromAminoMsg(object: _30.InnerOpAminoMsg): _30.InnerOp;
        fromProtoMsg(message: _30.InnerOpProtoMsg): _30.InnerOp;
        toProto(message: _30.InnerOp): Uint8Array;
        toProtoMsg(message: _30.InnerOp): _30.InnerOpProtoMsg;
    };
    ProofSpec: {
        typeUrl: string;
        encode(message: _30.ProofSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.ProofSpec;
        fromPartial(object: Partial<_30.ProofSpec>): _30.ProofSpec;
        fromAmino(object: _30.ProofSpecAmino): _30.ProofSpec;
        toAmino(message: _30.ProofSpec): _30.ProofSpecAmino;
        fromAminoMsg(object: _30.ProofSpecAminoMsg): _30.ProofSpec;
        fromProtoMsg(message: _30.ProofSpecProtoMsg): _30.ProofSpec;
        toProto(message: _30.ProofSpec): Uint8Array;
        toProtoMsg(message: _30.ProofSpec): _30.ProofSpecProtoMsg;
    };
    InnerSpec: {
        typeUrl: string;
        encode(message: _30.InnerSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.InnerSpec;
        fromPartial(object: Partial<_30.InnerSpec>): _30.InnerSpec;
        fromAmino(object: _30.InnerSpecAmino): _30.InnerSpec;
        toAmino(message: _30.InnerSpec): _30.InnerSpecAmino;
        fromAminoMsg(object: _30.InnerSpecAminoMsg): _30.InnerSpec;
        fromProtoMsg(message: _30.InnerSpecProtoMsg): _30.InnerSpec;
        toProto(message: _30.InnerSpec): Uint8Array;
        toProtoMsg(message: _30.InnerSpec): _30.InnerSpecProtoMsg;
    };
    BatchProof: {
        typeUrl: string;
        encode(message: _30.BatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.BatchProof;
        fromPartial(object: Partial<_30.BatchProof>): _30.BatchProof;
        fromAmino(object: _30.BatchProofAmino): _30.BatchProof;
        toAmino(message: _30.BatchProof): _30.BatchProofAmino;
        fromAminoMsg(object: _30.BatchProofAminoMsg): _30.BatchProof;
        fromProtoMsg(message: _30.BatchProofProtoMsg): _30.BatchProof;
        toProto(message: _30.BatchProof): Uint8Array;
        toProtoMsg(message: _30.BatchProof): _30.BatchProofProtoMsg;
    };
    BatchEntry: {
        typeUrl: string;
        encode(message: _30.BatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.BatchEntry;
        fromPartial(object: Partial<_30.BatchEntry>): _30.BatchEntry;
        fromAmino(object: _30.BatchEntryAmino): _30.BatchEntry;
        toAmino(message: _30.BatchEntry): _30.BatchEntryAmino;
        fromAminoMsg(object: _30.BatchEntryAminoMsg): _30.BatchEntry;
        fromProtoMsg(message: _30.BatchEntryProtoMsg): _30.BatchEntry;
        toProto(message: _30.BatchEntry): Uint8Array;
        toProtoMsg(message: _30.BatchEntry): _30.BatchEntryProtoMsg;
    };
    CompressedBatchProof: {
        typeUrl: string;
        encode(message: _30.CompressedBatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.CompressedBatchProof;
        fromPartial(object: Partial<_30.CompressedBatchProof>): _30.CompressedBatchProof;
        fromAmino(object: _30.CompressedBatchProofAmino): _30.CompressedBatchProof;
        toAmino(message: _30.CompressedBatchProof): _30.CompressedBatchProofAmino;
        fromAminoMsg(object: _30.CompressedBatchProofAminoMsg): _30.CompressedBatchProof;
        fromProtoMsg(message: _30.CompressedBatchProofProtoMsg): _30.CompressedBatchProof;
        toProto(message: _30.CompressedBatchProof): Uint8Array;
        toProtoMsg(message: _30.CompressedBatchProof): _30.CompressedBatchProofProtoMsg;
    };
    CompressedBatchEntry: {
        typeUrl: string;
        encode(message: _30.CompressedBatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.CompressedBatchEntry;
        fromPartial(object: Partial<_30.CompressedBatchEntry>): _30.CompressedBatchEntry;
        fromAmino(object: _30.CompressedBatchEntryAmino): _30.CompressedBatchEntry;
        toAmino(message: _30.CompressedBatchEntry): _30.CompressedBatchEntryAmino;
        fromAminoMsg(object: _30.CompressedBatchEntryAminoMsg): _30.CompressedBatchEntry;
        fromProtoMsg(message: _30.CompressedBatchEntryProtoMsg): _30.CompressedBatchEntry;
        toProto(message: _30.CompressedBatchEntry): Uint8Array;
        toProtoMsg(message: _30.CompressedBatchEntry): _30.CompressedBatchEntryProtoMsg;
    };
    CompressedExistenceProof: {
        typeUrl: string;
        encode(message: _30.CompressedExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.CompressedExistenceProof;
        fromPartial(object: Partial<_30.CompressedExistenceProof>): _30.CompressedExistenceProof;
        fromAmino(object: _30.CompressedExistenceProofAmino): _30.CompressedExistenceProof;
        toAmino(message: _30.CompressedExistenceProof): _30.CompressedExistenceProofAmino;
        fromAminoMsg(object: _30.CompressedExistenceProofAminoMsg): _30.CompressedExistenceProof;
        fromProtoMsg(message: _30.CompressedExistenceProofProtoMsg): _30.CompressedExistenceProof;
        toProto(message: _30.CompressedExistenceProof): Uint8Array;
        toProtoMsg(message: _30.CompressedExistenceProof): _30.CompressedExistenceProofProtoMsg;
    };
    CompressedNonExistenceProof: {
        typeUrl: string;
        encode(message: _30.CompressedNonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        decode(input: import("..").BinaryReader | Uint8Array, length?: number): _30.CompressedNonExistenceProof;
        fromPartial(object: Partial<_30.CompressedNonExistenceProof>): _30.CompressedNonExistenceProof;
        fromAmino(object: _30.CompressedNonExistenceProofAmino): _30.CompressedNonExistenceProof;
        toAmino(message: _30.CompressedNonExistenceProof): _30.CompressedNonExistenceProofAmino;
        fromAminoMsg(object: _30.CompressedNonExistenceProofAminoMsg): _30.CompressedNonExistenceProof;
        fromProtoMsg(message: _30.CompressedNonExistenceProofProtoMsg): _30.CompressedNonExistenceProof;
        toProto(message: _30.CompressedNonExistenceProof): Uint8Array;
        toProtoMsg(message: _30.CompressedNonExistenceProof): _30.CompressedNonExistenceProofProtoMsg;
    };
};
